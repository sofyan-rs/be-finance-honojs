generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  name         String
  email        String        @unique
  password     String
  createdAt    DateTime      @default(now())
  modifiedAt   DateTime      @updatedAt
  categories   Category[]
  transactions Transaction[]
  settings     UserSetting?
  wallets      Wallet[]
}

model Wallet {
  id           String        @id @default(uuid())
  name         String
  balance      Float         @default(0)
  userId       String
  createdAt    DateTime      @default(now())
  modifiedAt   DateTime      @updatedAt
  transactions Transaction[]
  user         User          @relation(fields: [userId], references: [id])
}

model Category {
  id           String          @id @default(uuid())
  name         String
  type         TransactionType
  userId       String?
  createdAt    DateTime        @default(now())
  modifiedAt   DateTime        @updatedAt
  user         User?           @relation(fields: [userId], references: [id])
  transactions Transaction[]
}

model Transaction {
  id         Int             @id @default(autoincrement())
  title      String
  amount     Float
  type       TransactionType
  date       DateTime        @default(now())
  userId     String?
  categoryId String?
  walletId   String?
  createdAt  DateTime        @default(now())
  modifiedAt DateTime        @updatedAt
  category   Category?       @relation(fields: [categoryId], references: [id])
  user       User?           @relation(fields: [userId], references: [id])
  wallet     Wallet?         @relation(fields: [walletId], references: [id])
}

model UserSetting {
  id         String   @id @default(uuid())
  userId     String   @unique
  currency   String   @default("USD")
  createdAt  DateTime @default(now())
  modifiedAt DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id])
}

enum TransactionType {
  income
  expense
}
